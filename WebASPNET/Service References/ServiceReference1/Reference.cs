//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebASPNET.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/usuarioGrabarXML", ReplyAction="http://tempuri.org/IService1/usuarioGrabarXMLResponse")]
        bool usuarioGrabarXML(string xmlUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/usuarioGrabarXML", ReplyAction="http://tempuri.org/IService1/usuarioGrabarXMLResponse")]
        System.Threading.Tasks.Task<bool> usuarioGrabarXMLAsync(string xmlUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/usuarioActualizarXML", ReplyAction="http://tempuri.org/IService1/usuarioActualizarXMLResponse")]
        bool usuarioActualizarXML(string xmlUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/usuarioActualizarXML", ReplyAction="http://tempuri.org/IService1/usuarioActualizarXMLResponse")]
        System.Threading.Tasks.Task<bool> usuarioActualizarXMLAsync(string xmlUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/usuarioListar", ReplyAction="http://tempuri.org/IService1/usuarioListarResponse")]
        Modelo.CL_Usuario[] usuarioListar();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/usuarioListar", ReplyAction="http://tempuri.org/IService1/usuarioListarResponse")]
        System.Threading.Tasks.Task<Modelo.CL_Usuario[]> usuarioListarAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/usuarioEliminar", ReplyAction="http://tempuri.org/IService1/usuarioEliminarResponse")]
        bool usuarioEliminar(int cod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/usuarioEliminar", ReplyAction="http://tempuri.org/IService1/usuarioEliminarResponse")]
        System.Threading.Tasks.Task<bool> usuarioEliminarAsync(int cod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/usuarioLogin", ReplyAction="http://tempuri.org/IService1/usuarioLoginResponse")]
        Modelo.CL_Usuario usuarioLogin(string user, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/usuarioLogin", ReplyAction="http://tempuri.org/IService1/usuarioLoginResponse")]
        System.Threading.Tasks.Task<Modelo.CL_Usuario> usuarioLoginAsync(string user, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/locales", ReplyAction="http://tempuri.org/IService1/localesResponse")]
        string[] locales();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/locales", ReplyAction="http://tempuri.org/IService1/localesResponse")]
        System.Threading.Tasks.Task<string[]> localesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/compraAgregar", ReplyAction="http://tempuri.org/IService1/compraAgregarResponse")]
        bool compraAgregar(string xmlCompra);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/compraAgregar", ReplyAction="http://tempuri.org/IService1/compraAgregarResponse")]
        System.Threading.Tasks.Task<bool> compraAgregarAsync(string xmlCompra);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/compraActualizar", ReplyAction="http://tempuri.org/IService1/compraActualizarResponse")]
        bool compraActualizar(string xmlCompra);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/compraActualizar", ReplyAction="http://tempuri.org/IService1/compraActualizarResponse")]
        System.Threading.Tasks.Task<bool> compraActualizarAsync(string xmlCompra);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/compraListar", ReplyAction="http://tempuri.org/IService1/compraListarResponse")]
        Modelo.CL_Compra[] compraListar();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/compraListar", ReplyAction="http://tempuri.org/IService1/compraListarResponse")]
        System.Threading.Tasks.Task<Modelo.CL_Compra[]> compraListarAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/detalleCompraAgregar", ReplyAction="http://tempuri.org/IService1/detalleCompraAgregarResponse")]
        bool detalleCompraAgregar(string xmlDetalleCompra);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/detalleCompraAgregar", ReplyAction="http://tempuri.org/IService1/detalleCompraAgregarResponse")]
        System.Threading.Tasks.Task<bool> detalleCompraAgregarAsync(string xmlDetalleCompra);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/detalleCompraActualizar", ReplyAction="http://tempuri.org/IService1/detalleCompraActualizarResponse")]
        bool detalleCompraActualizar(string xmlDetalleCompra);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/detalleCompraActualizar", ReplyAction="http://tempuri.org/IService1/detalleCompraActualizarResponse")]
        System.Threading.Tasks.Task<bool> detalleCompraActualizarAsync(string xmlDetalleCompra);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/detalleCompraListar", ReplyAction="http://tempuri.org/IService1/detalleCompraListarResponse")]
        Modelo.CL_DetalleCompra[] detalleCompraListar();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/detalleCompraListar", ReplyAction="http://tempuri.org/IService1/detalleCompraListarResponse")]
        System.Threading.Tasks.Task<Modelo.CL_DetalleCompra[]> detalleCompraListarAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/productoListar", ReplyAction="http://tempuri.org/IService1/productoListarResponse")]
        Modelo.CL_Producto[] productoListar();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/productoListar", ReplyAction="http://tempuri.org/IService1/productoListarResponse")]
        System.Threading.Tasks.Task<Modelo.CL_Producto[]> productoListarAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/productoAgregar", ReplyAction="http://tempuri.org/IService1/productoAgregarResponse")]
        bool productoAgregar(string xmlProducto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/productoAgregar", ReplyAction="http://tempuri.org/IService1/productoAgregarResponse")]
        System.Threading.Tasks.Task<bool> productoAgregarAsync(string xmlProducto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/productoActualizar", ReplyAction="http://tempuri.org/IService1/productoActualizarResponse")]
        bool productoActualizar(string xmlProducto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/productoActualizar", ReplyAction="http://tempuri.org/IService1/productoActualizarResponse")]
        System.Threading.Tasks.Task<bool> productoActualizarAsync(string xmlProducto);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WebASPNET.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WebASPNET.ServiceReference1.IService1>, WebASPNET.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool usuarioGrabarXML(string xmlUsuario) {
            return base.Channel.usuarioGrabarXML(xmlUsuario);
        }
        
        public System.Threading.Tasks.Task<bool> usuarioGrabarXMLAsync(string xmlUsuario) {
            return base.Channel.usuarioGrabarXMLAsync(xmlUsuario);
        }
        
        public bool usuarioActualizarXML(string xmlUsuario) {
            return base.Channel.usuarioActualizarXML(xmlUsuario);
        }
        
        public System.Threading.Tasks.Task<bool> usuarioActualizarXMLAsync(string xmlUsuario) {
            return base.Channel.usuarioActualizarXMLAsync(xmlUsuario);
        }
        
        public Modelo.CL_Usuario[] usuarioListar() {
            return base.Channel.usuarioListar();
        }
        
        public System.Threading.Tasks.Task<Modelo.CL_Usuario[]> usuarioListarAsync() {
            return base.Channel.usuarioListarAsync();
        }
        
        public bool usuarioEliminar(int cod) {
            return base.Channel.usuarioEliminar(cod);
        }
        
        public System.Threading.Tasks.Task<bool> usuarioEliminarAsync(int cod) {
            return base.Channel.usuarioEliminarAsync(cod);
        }
        
        public Modelo.CL_Usuario usuarioLogin(string user, string password) {
            return base.Channel.usuarioLogin(user, password);
        }
        
        public System.Threading.Tasks.Task<Modelo.CL_Usuario> usuarioLoginAsync(string user, string password) {
            return base.Channel.usuarioLoginAsync(user, password);
        }
        
        public string[] locales() {
            return base.Channel.locales();
        }
        
        public System.Threading.Tasks.Task<string[]> localesAsync() {
            return base.Channel.localesAsync();
        }
        
        public bool compraAgregar(string xmlCompra) {
            return base.Channel.compraAgregar(xmlCompra);
        }
        
        public System.Threading.Tasks.Task<bool> compraAgregarAsync(string xmlCompra) {
            return base.Channel.compraAgregarAsync(xmlCompra);
        }
        
        public bool compraActualizar(string xmlCompra) {
            return base.Channel.compraActualizar(xmlCompra);
        }
        
        public System.Threading.Tasks.Task<bool> compraActualizarAsync(string xmlCompra) {
            return base.Channel.compraActualizarAsync(xmlCompra);
        }
        
        public Modelo.CL_Compra[] compraListar() {
            return base.Channel.compraListar();
        }
        
        public System.Threading.Tasks.Task<Modelo.CL_Compra[]> compraListarAsync() {
            return base.Channel.compraListarAsync();
        }
        
        public bool detalleCompraAgregar(string xmlDetalleCompra) {
            return base.Channel.detalleCompraAgregar(xmlDetalleCompra);
        }
        
        public System.Threading.Tasks.Task<bool> detalleCompraAgregarAsync(string xmlDetalleCompra) {
            return base.Channel.detalleCompraAgregarAsync(xmlDetalleCompra);
        }
        
        public bool detalleCompraActualizar(string xmlDetalleCompra) {
            return base.Channel.detalleCompraActualizar(xmlDetalleCompra);
        }
        
        public System.Threading.Tasks.Task<bool> detalleCompraActualizarAsync(string xmlDetalleCompra) {
            return base.Channel.detalleCompraActualizarAsync(xmlDetalleCompra);
        }
        
        public Modelo.CL_DetalleCompra[] detalleCompraListar() {
            return base.Channel.detalleCompraListar();
        }
        
        public System.Threading.Tasks.Task<Modelo.CL_DetalleCompra[]> detalleCompraListarAsync() {
            return base.Channel.detalleCompraListarAsync();
        }
        
        public Modelo.CL_Producto[] productoListar() {
            return base.Channel.productoListar();
        }
        
        public System.Threading.Tasks.Task<Modelo.CL_Producto[]> productoListarAsync() {
            return base.Channel.productoListarAsync();
        }
        
        public bool productoAgregar(string xmlProducto) {
            return base.Channel.productoAgregar(xmlProducto);
        }
        
        public System.Threading.Tasks.Task<bool> productoAgregarAsync(string xmlProducto) {
            return base.Channel.productoAgregarAsync(xmlProducto);
        }
        
        public bool productoActualizar(string xmlProducto) {
            return base.Channel.productoActualizar(xmlProducto);
        }
        
        public System.Threading.Tasks.Task<bool> productoActualizarAsync(string xmlProducto) {
            return base.Channel.productoActualizarAsync(xmlProducto);
        }
    }
}
